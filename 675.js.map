{"version":3,"file":"675.js","mappings":"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","sources":["webpack://http-step-extension/./src/Components/HttpEndpoint.tsx","webpack://http-step-extension/./src/Components/HttpStep.tsx","webpack://http-step-extension/./src/Components/TimePeriodSelect.tsx","webpack://http-step-extension/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://http-step-extension/./node_modules/react/jsx-runtime.js"],"sourcesContent":["import {IEndpoint} from './HttpStep';\nimport {\n    Dropdown,\n    DropdownItem,\n    DropdownToggle,\n    FormGroup, FormSelect, FormSelectOption,\n    Grid,\n    GridItem, Label,\n    TextInput,\n} from '@patternfly/react-core';\nimport {OpenAPI} from 'openapi-types';\nimport {ReactElement, useEffect, useRef, useState} from 'react';\n\nconst ParamFields = ({parameters, handleChange}) => {\n    const fieldList: ReactElement[] = [];\n    parameters.forEach((v, name, index) => {\n        fieldList.push(\n            <FormGroup key={'key' + name + index} label={name} fieldId={'id' + name}>\n                <TextInput\n                    //key={\"inputKey\" + name+index}\n                    value={v}\n                    label={name}\n                    id={'idTextInput-' + name}\n                    name={'nameTextInput' + name}\n                    //\n                    onChange={(value) => {\n                        handleChange(name, value);\n                    }}\n                />\n            </FormGroup>\n        );\n    });\n    return (\n        fieldList.length > 0 && (\n            <FormGroup label=\"Parameters\" fieldId=\"simple-form-note-01\">\n                {fieldList}\n            </FormGroup>\n        )\n    );\n};\n\nexport type HttpEndpointProps = {\n    endpoint: IEndpoint;\n    isSource: boolean;\n    setUrl: (value: string) => void;\n    setContentType: (value: string) => void;\n};\n\nexport const HttpEndpoint = (props: HttpEndpointProps) => {\n    const [initOperationName] = props.endpoint.operations.keys();\n    const [currentOperation, setCurrentOperation] = useState<string>(initOperationName);\n    const parameters = useRef<Map<string, string>>(new Map());\n    const [currentContentType, setCurrentContentType] = useState<string>('');\n\n    //init parameters\n    const params = getParameters(getOperation(currentOperation));\n    const [existing] = parameters.current?.keys();\n    const [nw] = params.keys();\n\n    if (parameters.current.size === 0 || nw !== existing) {\n        parameters.current = params;\n    }\n\n    function getOperation(name: string) {\n        return props.endpoint.operations.get(name);\n    }\n\n    //  props.setUrl(props.endpoint.name);\n    function getParameters(method?: OpenAPI.Operation): Map<string, string> {\n        const parameters: Map<string, string> = new Map<string, string>();\n\n        method?.parameters?.forEach((v) => {\n            parameters.set(v.name, '');\n        });\n        return parameters;\n    }\n\n    function getParameter(key: string): OpenAPI.Parameter {\n        let found: OpenAPI.Parameter;\n        getOperation(currentOperation)?.parameters?.forEach((v: OpenAPI.Parameter) => {\n            if (v.name.toString() === key) {\n                found = v;\n            }\n        });\n        return found;\n    }\n\n    function selectOperation(name: string) {\n        const params: Map<string, string> = getParameters(getOperation(name));\n        parameters.current = new Map(params);\n        setCurrentOperation(name);\n    }\n\n    const dropdownOperationItems: Array<ReactElement> = [];\n    props.endpoint.operations.forEach((v, method) => {\n        dropdownOperationItems.push(\n            <FormSelectOption label={method} key={method} value={method}/>\n        );\n    });\n\n    const handleChange = (name: string, value: string) => {\n        parameters.current.set(name, value);\n\n        let uri = props.endpoint.name;\n        let p = '';\n        parameters.current.forEach((val, key) => {\n            if (val) {\n                const param: OpenAPI.Parameter = getParameter(key);\n                if (param.in === 'path') {\n                    uri = uri.replace(`{${key}}`, val);\n                } else if (param.in === 'query') {\n                    p = p + `&${key}=${val}`;\n                }\n            }\n        });\n        if (p.length > 0) {\n            p = '?' + p.substr(1);\n        }\n\n        props.setUrl(uri + p);\n    };\n\n    const producesOptions: Array<ReactElement> = new Array<React.ReactElement>();\n    getOperation(currentOperation)?.produces.forEach((p) => {\n        producesOptions.push(<FormSelectOption key={p} label={p} value={p}/>);\n    })\n\n    const updateContentType = (value: string) => {\n        props.setContentType(value);\n        setCurrentContentType(value);\n    }\n    type PathProperties = { path: string };\n    const PathField = (props: PathProperties) => {\n        return <div>{props.path}</div>;\n    };\n\n    useEffect(() => {\n        if (getOperation(initOperationName)?.produces)\n            props.setContentType(getOperation(initOperationName)?.produces[0]);\n\n        selectOperation(initOperationName);\n    }, [props.endpoint])\n\n    return (\n        <div>\n            {!props.isSource && <FormGroup label=\"Operation\">\n                <FormSelect aria-label='OperationSelect' onChange={selectOperation} value={currentOperation}\n                            children={dropdownOperationItems}/>\n            </FormGroup>}\n            <FormGroup label=\"Produces\">\n                <FormSelect aria-label='ContentTypeSelect' onChange={updateContentType} value={currentContentType}>\n                    {producesOptions}\n                </FormSelect>\n            </FormGroup>\n            <ParamFields parameters={parameters.current} handleChange={handleChange}/>\n            <FormGroup label='Info'>\n                <Grid>\n                    <GridItem span={6}>Summary</GridItem>\n                    <GridItem span={6}>\n                        <div>{getOperation(currentOperation)?.summary}</div>\n                    </GridItem>\n\n                    {getOperation(currentOperation)?.description && (\n                        <div>\n                            <GridItem span={6}>Description</GridItem>\n                            <GridItem span={6}>\n                                <div>{getOperation(currentOperation)?.description}</div>\n                            </GridItem>\n                        </div>\n                    )}\n\n                    <GridItem span={6}>Tags</GridItem>\n                    <GridItem span={6}>\n                        <Label>{getOperation(currentOperation)?.tags}</Label>\n                    </GridItem>\n                </Grid>\n            </FormGroup>\n        </div>\n    );\n};\n","import { HttpEndpoint } from './HttpEndpoint';\nimport { TimePeriodSelect, timeUnits } from './TimePeriodSelect';\nimport SwaggerParser from '@apidevtools/swagger-parser';\nimport {\n  Form,\n  FormGroup,\n  TextInput,\n  ActionGroup,\n  Button,\n  FileUpload,\n  InputGroup,\n  Checkbox,\n  FormSelect,\n  FormSelectOption,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\nimport { OpenAPI, OpenAPIV3, OpenAPIV2, OpenAPIV3_1 } from 'openapi-types';\nimport { ReactElement, useEffect, useRef, useState } from 'react';\n\nexport interface IEndpoint {\n  name: string;\n  pathItem:\n    | OpenAPIV2.PathItemObject\n    | OpenAPIV3.PathItemObject\n    | OpenAPIV3_1.PathItemObject\n    | undefined;\n  operations: Map<string, OpenAPI.Operation>;\n}\n\nasync function parseApiSpec(\n  input: string | OpenAPI.Document,\n  isSource: boolean\n): Promise<IEndpoint[]> {\n  let swaggerParser: SwaggerParser = new SwaggerParser();\n\n  const e: Array<IEndpoint> = [];\n  let api: OpenAPIV2.Document | OpenAPIV3.Document | OpenAPIV3_1.Document;\n\n  try {\n    api = await swaggerParser.validate(input, { dereference: { circular: 'ignore' } });\n    // @ts-ignore\n    Object.entries(swaggerParser.api.paths).forEach((p) => {\n      const operations: Map<string, OpenAPI.Operation> = new Map<string, OpenAPI.Operation>();\n      let hasGet: boolean = false;\n      Object.entries(p[1]).forEach((method: [string, OpenAPI.Operation]) => {\n        if (!isSource) {\n          operations.set(method[0], method[1]);\n        } else {\n          if (method[0].toUpperCase() === 'GET') hasGet = true;\n          operations.set(method[0], method[1]);\n        }\n      });\n      if (!isSource) {\n        e.push({ name: p[0], pathItem: p[1], operations: operations });\n      } else {\n        if (hasGet) {\n          e.push({ name: p[0], pathItem: p[1], operations: operations });\n        }\n      }\n    });\n  } catch (error) {\n    console.error('error ' + error);\n  }\n  return e;\n}\n\ntype HttpStepParams = {\n  url: string;\n  period: number;\n  contentType: string;\n};\n\nexport const HttpStep = (props: any) => {\n  let initPeriodINputValue = props.stepParams?.period;\n  let initTimeUnit = 's';\n\n  //get init values for the TimePeriodSelect\n  timeUnits.forEach((v, k) => {\n    const period = props.stepParams?.period || 1;\n    if (period / v >= 1 && period % v == 0) {\n      initPeriodINputValue = period / v;\n      initTimeUnit = k;\n    }\n  });\n\n  const [openApiSpecText, setOpenApiSpecText] = useState('');\n  const endpoints = useRef<IEndpoint[]>([]);\n  const [currentEndpoint, setCurrentEndpoint] = useState<IEndpoint>({\n    name: '',\n    pathItem: {},\n    operations: new Map(),\n  });\n  const [upload, setUpload] = useState<boolean>(false);\n  const [paramString, setParamString] = useState<string>('');\n  const [selectedEndpoint, setSelectedEndpoint] = useState<string>('');\n\n  const [stepParams, setStepParams] = useState<HttpStepParams>({\n    url: props.stepParams?.url || '',\n    period: props.stepParams?.period || 1,\n    contentType: props.stepParams?.contentType || '',\n  });\n  const [basePath, setBasePath] = useState<string>('');\n  const [apiSpecUrl, setApiUrl] = useState<string>('https://api.chucknorris.io/documentation');\n\n  const parseSpec = async (input: string) => {\n    endpoints.current = await parseApiSpec(input, isSource());\n    setCurrentEndpoint(endpoints.current[0]);\n  };\n\n  useEffect(() => {\n    let apiDoc = '';\n    if (upload && openApiSpecText !== '') {\n      apiDoc = JSON.parse(openApiSpecText);\n      parseSpec(apiDoc).catch(console.error);\n    }\n  }, [openApiSpecText, upload]);\n\n  function isSource(): boolean {\n    const name: string = props.step?.name.toString();\n    return name?.includes('source');\n  }\n\n  const handleFileInputChange = (\n    _event: React.ChangeEvent<HTMLInputElement> | React.DragEvent<HTMLElement>,\n    file: File\n  ) => {\n    file.text().then((input) => {\n      setOpenApiSpecText(input);\n    });\n  };\n\n  function selectApiEndpoint(index: string) {\n    const i = Number(index);\n    setSelectedEndpoint(index);\n    setCurrentEndpoint(endpoints.current[i]);\n    constructUrl(endpoints.current[i]?.name);\n  }\n\n  const dropdownEndpointsItems: Array<ReactElement> = [];\n\n  endpoints.current.forEach((e, index) => {\n    dropdownEndpointsItems.push(\n      <FormSelectOption key={e.name} value={index} label={e.name} isDisabled={false} />\n    );\n  });\n\n  const handleClear = (_event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setOpenApiSpecText('');\n  };\n\n  function updateKaoto() {\n    props.notifyKaoto('Http step updated');\n    if (isSource()) {\n      props.updateStepParams(stepParams);\n      // if the step is either sink or action it doesn't have the period field\n    } else {\n      props.updateStepParams({ url: stepParams.url, contentType: stepParams.contentType });\n    }\n  }\n\n  const handleLoadClick = () => {\n    const url = new URL(apiSpecUrl);\n    parseSpec(apiSpecUrl).catch(console.error);\n    constructUrl('', url.origin);\n  };\n\n  const constructUrl = (urParameters: string, bPath?: string) => {\n    setParamString(urParameters);\n    const stepParamsTemp = stepParams;\n    if (bPath !== undefined) {\n      setBasePath(bPath);\n      stepParamsTemp.url = bPath + urParameters;\n    } else {\n      stepParamsTemp.url = basePath + urParameters;\n    }\n    setStepParams(stepParamsTemp);\n  };\n\n  function updateStepParams(url: string, contentType: string, period: number) {\n    const newStepParams: HttpStepParams = {\n      period: period > 0 ? period : stepParams.period,\n      url: url !== '' ? url : stepParams.url,\n      contentType: contentType !== '' ? contentType : stepParams.contentType,\n    };\n    setStepParams(newStepParams);\n  }\n\n  return (\n    <Form>\n      <FormGroup label=\"OpenApi\" fieldId=\"open-api-file-upload\">\n        <Checkbox id=\"inputType\" label=\"Upload spec\" isChecked={upload} onChange={setUpload} />\n\n        {upload && (\n          <FileUpload\n            id=\"simple-file\"\n            value={openApiSpecText}\n            filenamePlaceholder=\"Drag and drop a open API spec or upload one\"\n            onFileInputChange={handleFileInputChange}\n            onClearClick={handleClear}\n            browseButtonText=\"Upload\"\n          />\n        )}\n        {!upload && (\n          <InputGroup>\n            <TextInput\n              id=\"specUrlInput\"\n              aria-label=\"Api spec url\"\n              value={apiSpecUrl}\n              onChange={setApiUrl}\n            />\n            <Button onClick={handleLoadClick}>Load</Button>\n          </InputGroup>\n        )}\n      </FormGroup>\n      <FormGroup label=\"Base Path\">\n        <Grid>\n          <GridItem span={6}>\n            <TextInput\n              id=\"basePathInput\"\n              aria-label=\"Base path\"\n              value={basePath}\n              onChange={(value: string) => {\n                constructUrl(paramString, value);\n              }}\n            />\n          </GridItem>\n          <GridItem span={6}>\n            <FormSelect\n              minLength={500}\n              type=\"text\"\n              id=\"simple-form-note-01\"\n              name=\"simple-form-number\"\n              value={selectedEndpoint}\n              onChange={selectApiEndpoint}\n            >\n              {dropdownEndpointsItems}\n            </FormSelect>\n          </GridItem>\n        </Grid>\n      </FormGroup>\n      {currentEndpoint?.name !== '' && (\n        <HttpEndpoint\n          endpoint={currentEndpoint}\n          isSource={isSource()}\n          setUrl={constructUrl}\n          setContentType={(contentType: string) => {\n            updateStepParams('', contentType, 0);\n          }}\n        />\n      )}\n\n      {isSource() && (\n        <TimePeriodSelect\n          initTimeUnit={initTimeUnit}\n          initPeriodInputValue={initPeriodINputValue}\n          setTimePeriod={(period: number) => {\n            updateStepParams('', '', period);\n          }}\n        />\n      )}\n\n      <FormGroup label=\"URL\">\n        <TextInput\n          onChange={(value) => updateStepParams(value, '', 0)}\n          value={stepParams.url}\n          aria-label=\"url-read-only\"\n        />\n      </FormGroup>\n      <FormGroup label=\"Content Type\">\n        <TextInput\n          onChange={(value) => updateStepParams('', value, 0)}\n          value={stepParams.contentType}\n          aria-label=\"url-read-only\"\n        />\n      </FormGroup>\n      <ActionGroup>\n        <Button variant=\"primary\" onClick={updateKaoto}>\n          Apply\n        </Button>\n      </ActionGroup>\n    </Form>\n  );\n};\n\nexport default HttpStep;\n","import {FormGroup, FormSelect, FormSelectOption, Grid, GridItem, TextInput} from \"@patternfly/react-core\";\nimport {useState} from \"react\";\n\nexport const timeUnits: Map<string, number> = new Map<string, number>([\n    ['ms', 1],\n    ['s', 1000],\n    ['min', 1000 * 60],\n    ['hour', 1000 * 3600],\n    ['day', 1000 * 3600 * 24],\n])\n\nexport type TimePeriodSelectProps = {\n    initTimeUnit: string,\n    initPeriodInputValue: number,\n    setTimePeriod: (period: number) => void\n}\nexport const TimePeriodSelect = (props: TimePeriodSelectProps) => {\n\n    const [timeUnit, setTImeUnit] = useState<string>(props.initTimeUnit);\n    const [periodInputValue, setPeriodInputValue] = useState<number>(props.initPeriodInputValue);\n\n    function calculateTime(unit: string) {\n        const n = timeUnits.get(unit);\n        setTImeUnit(unit);\n\n        if (n) {\n            props.setTimePeriod(periodInputValue * n);\n        }\n    }\n\n    return <FormGroup label=\"Period\">\n        <Grid>\n            <GridItem span={4}>\n                <TextInput value={periodInputValue} onChange={setPeriodInputValue} type=\"number\"\n                           aria-label=\"period\"/>\n            </GridItem>\n            <GridItem span={8}>\n                <FormSelect\n                    id=\"period-01\"\n                    name=\"simple-form-number\"\n                    value={timeUnit}\n                    onChange={calculateTime}>\n                    <FormSelectOption key='ms' value='ms' label='Miliseconds' isDisabled={false}/>\n                    <FormSelectOption key='s' value='s' label='Seconds' isDisabled={false}/>\n                    <FormSelectOption key='min' value='min' label='Minutes' isDisabled={false}/>\n                    <FormSelectOption key='hour' value='hour' label='Hours' isDisabled={false}/>\n                    <FormSelectOption key='day' value='day' label='Days' isDisabled={false}/>\n                </FormSelect>\n            </GridItem>\n        </Grid>\n    </FormGroup>\n}","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["ParamFields","parameters","handleChange","fieldList","forEach","v","name","index","push","FormGroup","label","fieldId","TextInput","value","id","onChange","length","HttpEndpoint","props","initOperationName","endpoint","operations","keys","currentOperation","setCurrentOperation","useState","useRef","Map","currentContentType","setCurrentContentType","params","getParameters","getOperation","existing","current","nw","get","method","set","selectOperation","size","dropdownOperationItems","FormSelectOption","producesOptions","Array","produces","p","useEffect","setContentType","isSource","FormSelect","children","uri","val","key","param","found","toString","getParameter","in","replace","substr","setUrl","Grid","GridItem","span","summary","description","Label","tags","HttpStep","initPeriodINputValue","stepParams","period","initTimeUnit","timeUnits","k","openApiSpecText","setOpenApiSpecText","endpoints","currentEndpoint","setCurrentEndpoint","pathItem","upload","setUpload","paramString","setParamString","selectedEndpoint","setSelectedEndpoint","setStepParams","url","contentType","basePath","setBasePath","apiSpecUrl","setApiUrl","parseSpec","async","input","swaggerParser","SwaggerParser","e","api","validate","dereference","circular","Object","entries","paths","hasGet","toUpperCase","error","console","parseApiSpec","step","includes","apiDoc","JSON","parse","catch","dropdownEndpointsItems","isDisabled","constructUrl","urParameters","bPath","stepParamsTemp","undefined","updateStepParams","newStepParams","Form","Checkbox","isChecked","FileUpload","filenamePlaceholder","onFileInputChange","_event","file","text","then","onClearClick","browseButtonText","InputGroup","Button","onClick","URL","origin","minLength","type","i","Number","initPeriodInputValue","setTimePeriod","ActionGroup","variant","notifyKaoto","TimePeriodSelect","timeUnit","setTImeUnit","periodInputValue","setPeriodInputValue","unit","n","f","Symbol","for","m","prototype","hasOwnProperty","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","ref","__self","__source","q","c","a","g","b","d","h","call","defaultProps","$$typeof","_owner","exports","jsx","jsxs","module"],"sourceRoot":""}